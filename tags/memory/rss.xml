<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memory on VxWorks 7</title>
    <link>https://www.vxworks7.com/tags/memory/</link>
    <description>Recent content in Memory on VxWorks 7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 22 Apr 2023 12:31:25 -0400</lastBuildDate><atom:link href="https://www.vxworks7.com/tags/memory/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用VxWorks 7内核 shell 来访问设备的寄存器</title>
      <link>https://www.vxworks7.com/post/bsp/vxworks-7-memory-management.html</link>
      <pubDate>Sat, 22 Apr 2023 12:31:25 -0400</pubDate>
      
      <guid>https://www.vxworks7.com/post/bsp/vxworks-7-memory-management.html</guid>
      <description>&lt;p&gt;在这篇博文中，我将解释如何使用 
&lt;a href=&#34;https://www.vxworks7.com&#34; title=&#34;VxWorks 7&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    VxWorks 7
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; 内核控制台(shell)读写硬件设备中的寄存器。对于任何一个开发设备驱动程序或其他直接与内存映射设备进行交付的代码的人来说，这是一个非常有用的功能。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
